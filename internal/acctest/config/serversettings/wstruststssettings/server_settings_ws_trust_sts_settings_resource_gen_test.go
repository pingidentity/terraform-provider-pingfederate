// Code generated by ping-terraform-plugin-framework-generator

package serversettingswstruststssettings_test

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-framework/providerserver"
	"github.com/hashicorp/terraform-plugin-go/tfprotov6"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/pingidentity/terraform-provider-pingfederate/internal/acctest"
	"github.com/pingidentity/terraform-provider-pingfederate/internal/provider"
)

func TestAccServerSettingsWsTrustStsSettings_MinimalMaximal(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck: func() { acctest.ConfigurationPreCheck(t) },
		ProtoV6ProviderFactories: map[string]func() (tfprotov6.ProviderServer, error){
			"pingfederate": providerserver.NewProtocol6WithError(provider.NewTestProvider()),
		},
		Steps: []resource.TestStep{
			{
				// Create the resource with a minimal model
				Config: serverSettingsWsTrustStsSettings_MinimalHCL(),
				Check:  serverSettingsWsTrustStsSettings_CheckComputedValuesMinimal(),
			},
			{
				// Update to a complete model
				Config: serverSettingsWsTrustStsSettings_CompleteHCL(),
				Check:  serverSettingsWsTrustStsSettings_CheckComputedValuesComplete(),
			},
			{
				// Test importing the resource
				Config:                               serverSettingsWsTrustStsSettings_CompleteHCL(),
				ResourceName:                         "pingfederate_server_settings_ws_trust_sts_settings.example",
				ImportStateVerifyIdentifierAttribute: "basic_authn_enabled",
				ImportState:                          true,
				ImportStateVerify:                    true,
			},
			{
				// Back to minimal model
				Config: serverSettingsWsTrustStsSettings_MinimalHCL(),
				Check:  serverSettingsWsTrustStsSettings_CheckComputedValuesMinimal(),
			},
		},
	})
}

// Minimal HCL with only required values set
func serverSettingsWsTrustStsSettings_MinimalHCL() string {
	return fmt.Sprintf(`
resource "pingfederate_server_settings_ws_trust_sts_settings" "example" {
}
`)
}

// Maximal HCL with all values set where possible
func serverSettingsWsTrustStsSettings_CompleteHCL() string {
	return fmt.Sprintf(`
resource "pingfederate_server_settings_ws_trust_sts_settings" "example" {
  basic_authn_enabled = true
  client_cert_authn_enabled = true
  issuer_certs = [
    {
      id = //TODO
    }
  ]
  restrict_by_issuer_cert = true
  restrict_by_subject_dn = true
  subject_dns = ["cn=test"]
  users = [
    {
      password = "2FederateM0re"
      username = "user1"
    }
  ]
}
`)
}

// Validate any computed values when applying minimal HCL
func serverSettingsWsTrustStsSettings_CheckComputedValuesMinimal() resource.TestCheckFunc {
	return resource.ComposeTestCheckFunc(
		resource.TestCheckResourceAttr("pingfederate_server_settings_ws_trust_sts_settings.example", "basic_authn_enabled", "false"),
		resource.TestCheckResourceAttr("pingfederate_server_settings_ws_trust_sts_settings.example", "client_cert_authn_enabled", "false"),
		resource.TestCheckResourceAttr("pingfederate_server_settings_ws_trust_sts_settings.example", "issuer_certs.#", "0"),
		resource.TestCheckResourceAttr("pingfederate_server_settings_ws_trust_sts_settings.example", "restrict_by_issuer_cert", "false"),
		resource.TestCheckResourceAttr("pingfederate_server_settings_ws_trust_sts_settings.example", "restrict_by_subject_dn", "false"),
		resource.TestCheckResourceAttr("pingfederate_server_settings_ws_trust_sts_settings.example", "subject_dns.#", "0"),
		resource.TestCheckResourceAttr("pingfederate_server_settings_ws_trust_sts_settings.example", "users.#", "0"),
	)
}

// Validate any computed values when applying complete HCL
// TODO This may not be needed as a separate function from minimal HCL if the expected values match
// TODO remove any values that are not computed from this check
// TODO set expected values
func serverSettingsWsTrustStsSettings_CheckComputedValuesComplete() resource.TestCheckFunc {
	return resource.ComposeTestCheckFunc(
	/*resource.TestCheckResourceAttr("pingfederate_server_settings_ws_trust_sts_settings.example", "basic_authn_enabled", "expected_value"),
	resource.TestCheckResourceAttr("pingfederate_server_settings_ws_trust_sts_settings.example", "client_cert_authn_enabled", "expected_value"),
	resource.TestCheckResourceAttr("pingfederate_server_settings_ws_trust_sts_settings.example", "restrict_by_issuer_cert", "expected_value"),
	resource.TestCheckResourceAttr("pingfederate_server_settings_ws_trust_sts_settings.example", "restrict_by_subject_dn", "expected_value"),
	resource.TestCheckResourceAttr("pingfederate_server_settings_ws_trust_sts_settings.example", "subject_dns.0", "expected_value"),
	resource.TestCheckResourceAttr("pingfederate_server_settings_ws_trust_sts_settings.example", "users.0.password", "expected_value"),
	resource.TestCheckResourceAttr("pingfederate_server_settings_ws_trust_sts_settings.example", "users.0.username", "expected_value"),*/
	)
}
