// Code generated by ping-terraform-plugin-framework-generator

package spdefaulturls_test

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-framework/providerserver"
	"github.com/hashicorp/terraform-plugin-go/tfprotov6"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/pingidentity/terraform-provider-pingfederate/internal/acctest"
	"github.com/pingidentity/terraform-provider-pingfederate/internal/provider"
)

func TestAccSpDefaultUrls_MinimalMaximal(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck: func() { acctest.ConfigurationPreCheck(t) },
		ProtoV6ProviderFactories: map[string]func() (tfprotov6.ProviderServer, error){
			"pingfederate": providerserver.NewProtocol6WithError(provider.NewTestProvider()),
		},
		Steps: []resource.TestStep{
			{
				// Create the resource with a minimal model
				Config: spDefaultUrls_MinimalHCL(),
				Check:  spDefaultUrls_CheckComputedValuesMinimal(),
			},
			{
				// Update to a complete model
				Config: spDefaultUrls_CompleteHCL(),
				Check:  spDefaultUrls_CheckComputedValuesComplete(),
			},
			{
				// Test importing the resource
				Config:                               spDefaultUrls_CompleteHCL(),
				ResourceName:                         "pingfederate_sp_default_urls.example",
				ImportStateVerifyIdentifierAttribute: "confirm_slo",
				ImportState:                          true,
				ImportStateVerify:                    true,
			},
			{
				// Back to minimal model
				Config: spDefaultUrls_MinimalHCL(),
				Check:  spDefaultUrls_CheckComputedValuesMinimal(),
			},
		},
	})
}

// Minimal HCL with only required values set
func spDefaultUrls_MinimalHCL() string {
	return fmt.Sprintf(`
resource "pingfederate_sp_default_urls" "example" {
}
`)
}

// Maximal HCL with all values set where possible
func spDefaultUrls_CompleteHCL() string {
	return fmt.Sprintf(`
resource "pingfederate_sp_default_urls" "example" {
  confirm_slo     = true
  slo_success_url = "https://example.com/slo_success_url"
  sso_success_url = "https://example.com/sso_success_url"
}
`)
}

// Validate any computed values when applying minimal HCL
func spDefaultUrls_CheckComputedValuesMinimal() resource.TestCheckFunc {
	return resource.ComposeTestCheckFunc(
		resource.TestCheckResourceAttr("pingfederate_sp_default_urls.example", "confirm_slo", "false"),
	)
}

// Validate any computed values when applying complete HCL
func spDefaultUrls_CheckComputedValuesComplete() resource.TestCheckFunc {
	return resource.ComposeTestCheckFunc(
		resource.TestCheckResourceAttr("pingfederate_sp_default_urls.example", "confirm_slo", "true"),
	)
}
