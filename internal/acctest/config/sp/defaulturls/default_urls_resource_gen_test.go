// Code generated by ping-terraform-plugin-framework-generator

package defaulturls_test

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-framework/providerserver"
	"github.com/hashicorp/terraform-plugin-go/tfprotov6"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/pingidentity/terraform-provider-pingfederate/internal/acctest"
	"github.com/pingidentity/terraform-provider-pingfederate/internal/provider"
)

func TestAccDefaultUrls_MinimalMaximal(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck: func() { acctest.ConfigurationPreCheck(t) },
		ProtoV6ProviderFactories: map[string]func() (tfprotov6.ProviderServer, error){
			"pingfederate": providerserver.NewProtocol6WithError(provider.NewTestProvider()),
		},
		Steps: []resource.TestStep{
			{
				// Create the resource with a minimal model
				Config: defaultUrls_MinimalHCL(),
				Check:  defaultUrls_CheckComputedValuesMinimal(),
			},
			{
				// Update to a complete model. No computed values here to check.
				Config: defaultUrls_CompleteHCL(),
			},
			{
				// Test importing the resource
				Config:                               defaultUrls_CompleteHCL(),
				ResourceName:                         "pingfederate_default_urls.example",
				ImportStateVerifyIdentifierAttribute: "confirm_sp_slo",
				ImportState:                          true,
				ImportStateVerify:                    true,
			},
			{
				// Back to minimal model
				Config: defaultUrls_MinimalHCL(),
				Check:  defaultUrls_CheckComputedValuesMinimal(),
			},
		},
	})
}

// Minimal HCL with only required values set
func defaultUrls_MinimalHCL() string {
	return fmt.Sprintf(`
resource "pingfederate_default_urls" "example" {
  idp_error_msg = "errorDetail.idpSsoFailure"
}
`)
}

// Maximal HCL with all values set where possible
func defaultUrls_CompleteHCL() string {
	return fmt.Sprintf(`
resource "pingfederate_default_urls" "example" {
  confirm_sp_slo      = true
  sp_slo_success_url  = "https://example.com/slo_success_url"
  sp_sso_success_url  = "https://example.com/sso_success_url"
  confirm_idp_slo     = true
  idp_error_msg       = "errorDetail.idpSsoFailure"
  idp_slo_success_url = "https://example.com/idp_slo_success_url"
}
`)
}

// Validate any computed values when applying minimal HCL
func defaultUrls_CheckComputedValuesMinimal() resource.TestCheckFunc {
	return resource.ComposeTestCheckFunc(
		resource.TestCheckResourceAttr("pingfederate_default_urls.example", "confirm_sp_slo", "false"),
		resource.TestCheckResourceAttr("pingfederate_default_urls.example", "confirm_idp_slo", "false"),
	)
}
