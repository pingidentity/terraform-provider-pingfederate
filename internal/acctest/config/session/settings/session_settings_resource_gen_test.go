// Copyright Â© 2025 Ping Identity Corporation
// Code generated by ping-terraform-plugin-framework-generator

package sessionsettings_test

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-framework/providerserver"
	"github.com/hashicorp/terraform-plugin-go/tfprotov6"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/pingidentity/terraform-provider-pingfederate/internal/acctest"
	"github.com/pingidentity/terraform-provider-pingfederate/internal/provider"
)

func TestAccSessionSettings_MinimalMaximal(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck: func() { acctest.ConfigurationPreCheck(t) },
		ProtoV6ProviderFactories: map[string]func() (tfprotov6.ProviderServer, error){
			"pingfederate": providerserver.NewProtocol6WithError(provider.NewTestProvider()),
		},
		Steps: []resource.TestStep{
			{
				// Create the resource with a minimal model
				Config: sessionSettings_MinimalHCL(),
				Check:  sessionSettings_CheckComputedValuesMinimal(),
			},
			{
				// Delete the minimal model
				Config:  sessionSettings_MinimalHCL(),
				Destroy: true,
			},
			{
				// Re-create with a complete model. No computed values to check.
				Config: sessionSettings_CompleteHCL(),
			},
			{
				// Back to minimal model
				Config: sessionSettings_MinimalHCL(),
				Check:  sessionSettings_CheckComputedValuesMinimal(),
			},
			{
				// Back to complete model
				Config: sessionSettings_CompleteHCL(),
			},
			{
				// Test importing the resource
				Config:                               sessionSettings_CompleteHCL(),
				ResourceName:                         "pingfederate_session_settings.example",
				ImportStateVerifyIdentifierAttribute: "revoke_user_session_on_logout",
				ImportState:                          true,
				ImportStateVerify:                    true,
			},
		},
	})
}

// Minimal HCL with only required values set
func sessionSettings_MinimalHCL() string {
	return fmt.Sprintf(`
resource "pingfederate_session_settings" "example" {
}
`)
}

// Maximal HCL with all values set where possible
func sessionSettings_CompleteHCL() string {
	return fmt.Sprintf(`
resource "pingfederate_session_settings" "example" {
  revoke_user_session_on_logout = false
  session_revocation_lifetime = 45
  track_adapter_sessions_for_logout = true
}
`)
}

// Validate any computed values when applying minimal HCL
func sessionSettings_CheckComputedValuesMinimal() resource.TestCheckFunc {
	return resource.ComposeTestCheckFunc(
		resource.TestCheckResourceAttr("pingfederate_session_settings.example", "revoke_user_session_on_logout", "true"),
		resource.TestCheckResourceAttr("pingfederate_session_settings.example", "session_revocation_lifetime", "40"),
		resource.TestCheckResourceAttr("pingfederate_session_settings.example", "track_adapter_sessions_for_logout", "false"),
	)
}
