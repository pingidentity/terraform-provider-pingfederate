// Copyright Â© 2025 Ping Identity Corporation
// Code generated by ping-terraform-plugin-framework-generator

package sessionauthenticationsessionpoliciesglobal_test

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-framework/providerserver"
	"github.com/hashicorp/terraform-plugin-go/tfprotov6"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/pingidentity/terraform-provider-pingfederate/internal/acctest"
	"github.com/pingidentity/terraform-provider-pingfederate/internal/provider"
)

func TestAccSessionAuthenticationPoliciesGlobal_MinimalMaximal(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck: func() { acctest.ConfigurationPreCheck(t) },
		ProtoV6ProviderFactories: map[string]func() (tfprotov6.ProviderServer, error){
			"pingfederate": providerserver.NewProtocol6WithError(provider.NewTestProvider()),
		},
		Steps: []resource.TestStep{
			{
				// Create the resource with a minimal model
				Config: sessionAuthenticationPoliciesGlobal_MinimalHCL(),
				Check:  sessionAuthenticationPoliciesGlobal_CheckComputedValuesMinimal(),
			},
			{
				// Delete the minimal model
				Config:  sessionAuthenticationPoliciesGlobal_MinimalHCL(),
				Destroy: true,
			},
			{
				// Re-create with a complete model. No computed values to check.
				Config: sessionAuthenticationPoliciesGlobal_CompleteHCL(),
			},
			{
				// Back to minimal model
				Config: sessionAuthenticationPoliciesGlobal_MinimalHCL(),
				Check:  sessionAuthenticationPoliciesGlobal_CheckComputedValuesMinimal(),
			},
			{
				// Back to complete model
				Config: sessionAuthenticationPoliciesGlobal_CompleteHCL(),
			},
			{
				// Test importing the resource
				Config:                               sessionAuthenticationPoliciesGlobal_CompleteHCL(),
				ResourceName:                         "pingfederate_session_authentication_policies_global.example",
				ImportStateVerifyIdentifierAttribute: "enable_sessions",
				ImportState:                          true,
				ImportStateVerify:                    true,
			},
		},
	})
}

// Minimal HCL with only required values set
func sessionAuthenticationPoliciesGlobal_MinimalHCL() string {
	return fmt.Sprintf(`
resource "pingfederate_session_authentication_policies_global" "example" {
  enable_sessions = false
}
data "pingfederate_session_authentication_policies_global" "example" {
  depends_on = [pingfederate_session_authentication_policies_global.example]
}
`)
}

// Maximal HCL with all values set where possible
func sessionAuthenticationPoliciesGlobal_CompleteHCL() string {
	return fmt.Sprintf(`
resource "pingfederate_session_authentication_policies_global" "example" {
  enable_sessions                = true
  hash_unique_user_key_attribute = true
  idle_timeout_display_unit      = "HOURS"
  idle_timeout_mins              = 120
  max_timeout_display_unit       = "HOURS"
  max_timeout_mins               = 360
  persistent_sessions            = true
}
data "pingfederate_session_authentication_policies_global" "example" {
  depends_on = [pingfederate_session_authentication_policies_global.example]
}
`)
}

// Validate any computed values when applying minimal HCL
func sessionAuthenticationPoliciesGlobal_CheckComputedValuesMinimal() resource.TestCheckFunc {
	return resource.ComposeTestCheckFunc(
		resource.TestCheckResourceAttr("pingfederate_session_authentication_policies_global.example", "hash_unique_user_key_attribute", "false"),
		resource.TestCheckResourceAttr("pingfederate_session_authentication_policies_global.example", "idle_timeout_display_unit", "MINUTES"),
		resource.TestCheckResourceAttr("pingfederate_session_authentication_policies_global.example", "idle_timeout_mins", "60"),
		resource.TestCheckResourceAttr("pingfederate_session_authentication_policies_global.example", "max_timeout_display_unit", "MINUTES"),
		resource.TestCheckResourceAttr("pingfederate_session_authentication_policies_global.example", "max_timeout_mins", "480"),
		resource.TestCheckResourceAttr("pingfederate_session_authentication_policies_global.example", "persistent_sessions", "false"),
	)
}
