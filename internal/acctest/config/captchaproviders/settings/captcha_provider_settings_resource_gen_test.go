// Code generated by ping-terraform-plugin-framework-generator

package captchaproviderssettings_test

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-framework/providerserver"
	"github.com/hashicorp/terraform-plugin-go/tfprotov6"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/pingidentity/terraform-provider-pingfederate/internal/acctest"
	"github.com/pingidentity/terraform-provider-pingfederate/internal/provider"
)

func TestAccCaptchaProviderSettings_BeforeAfter(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck: func() { acctest.ConfigurationPreCheck(t) },
		ProtoV6ProviderFactories: map[string]func() (tfprotov6.ProviderServer, error){
			"pingfederate": providerserver.NewProtocol6WithError(provider.NewTestProvider()),
		},
		Steps: []resource.TestStep{
			{
				// Set with the initial model
				Config: captchaProviderSettings_BeforeHCL(),
			},
			{
				// Flip to the updated model
				Config: captchaProviderSettings_AfterHCL(),
			},
			{
				// Flip back to the initial model
				Config: captchaProviderSettings_BeforeHCL(),
			},
			{
				// Test importing the resource
				Config:                               captchaProviderSettings_BeforeHCL(),
				ResourceName:                         "pingfederate_captcha_provider_settings.example",
				ImportStateVerifyIdentifierAttribute: "default_captcha_provider_ref.%",
				ImportState:                          true,
				ImportStateVerify:                    true,
			},
		},
	})
}

// Maximal HCL with all values set where possible
func captchaProviderSettings_BeforeHCL() string {
	return fmt.Sprintf(`
resource "pingfederate_captcha_provider_settings" "example" {
  default_captcha_provider_ref = {
    id = "exampleCaptchaProviderV2"
  }
}
`)
}

// Minimal HCL with only required values set
func captchaProviderSettings_AfterHCL() string {
	return fmt.Sprintf(`
resource "pingfederate_captcha_provider_settings" "example" {
  default_captcha_provider_ref = {
    id = "exampleCaptchaProvider"
  }
}
`)
}
