// Copyright Â© 2025 Ping Identity Corporation

// Code generated by ping-terraform-plugin-framework-generator

package captchaproviderssettings_test

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-framework/providerserver"
	"github.com/hashicorp/terraform-plugin-go/tfprotov6"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/pingidentity/terraform-provider-pingfederate/internal/acctest"
	"github.com/pingidentity/terraform-provider-pingfederate/internal/provider"
)

func TestAccCaptchaProviderSettings_BeforeAfter(t *testing.T) {
	resourceName := acctest.ResourceIdGen()
	resource.Test(t, resource.TestCase{
		PreCheck: func() { acctest.ConfigurationPreCheck(t) },
		ProtoV6ProviderFactories: map[string]func() (tfprotov6.ProviderServer, error){
			"pingfederate": providerserver.NewProtocol6WithError(provider.NewTestProvider()),
		},
		Steps: []resource.TestStep{
			{
				// Set with the initial model
				Config: captchaProviderSettings_EmptyHCL(resourceName),
			},
			{
				// Flip to the updated model
				Config: captchaProviderSettings_WithDefaultHCL(resourceName),
			},
			{
				// Test importing the resource
				Config:                               captchaProviderSettings_WithDefaultHCL(resourceName),
				ResourceName:                         "pingfederate_captcha_provider_settings." + resourceName,
				ImportStateVerifyIdentifierAttribute: "default_captcha_provider_ref.%",
				ImportState:                          true,
				ImportStateVerify:                    true,
			},
			{
				// Flip back to the initial model
				Config: captchaProviderSettings_EmptyHCL(resourceName),
			},
		},
	})
}

// Maximal HCL with all values set where possible
func captchaProviderSettings_EmptyHCL(resourceName string) string {
	return fmt.Sprintf(`
resource "pingfederate_captcha_provider_settings" "%s" {
}
`, resourceName)
}

// Minimal HCL with only required values set
func captchaProviderSettings_WithDefaultHCL(resourceName string) string {
	return fmt.Sprintf(`
resource "pingfederate_captcha_provider" "%[1]sProvider" {
  configuration = {
    fields = [
      {
        name  = "JavaScript File Name"
        value = "recaptcha-v3.js"
      },
      {
        name  = "Pass Score Threshold"
        value = "1"
      },
      {
        name  = "Site Key"
        value = "asdf"
      },
    ]
    sensitive_fields = [
      {
        name  = "Secret Key"
        value = "asdf"
      },
    ]
  }
  name = "%[1]sProvider"
  plugin_descriptor_ref = {
    id = "com.pingidentity.captcha.recaptchaV3.ReCaptchaV3Plugin"
  }
  provider_id = "%[1]sProvider"
}

resource "pingfederate_captcha_provider_settings" "%[1]s" {
  default_captcha_provider_ref = {
    id = pingfederate_captcha_provider.%[1]sProvider.id
  }
}
`, resourceName)
}
